<?phpfunction content_resource_index($hash , $domain , $language , $page , $version){    if(!(hash_true($hash , "content"))) return "failed to access";    if($version == 0){        return list_of_contents_version_one($domain , $language , $page);    }    return "This version not supported";}function content_resource_retrieve($hash , $nid , $domain , $version){    if(!(hash_true($hash , "content"))) return "failed to access";    if($version == 0){        return retrieve_a_content_version_one($nid , $domain);    }    return "This version not supported";}function list_of_contents_version_one($domain , $language ,  $page){    switch ($domain){        case "EBook" :            return ebook_list($language , $page);            break;        default:            return "domain is not exist";            break;    }}function ebook_list($language , $page){    $query = db_select('node' , 'node');    $query->join('field_data_field_point_needed' , 'price' , 'node.nid = price.entity_id');    $query->join('field_data_field_files' , 'field_file' , 'node.nid = field_file.entity_id');    $query->fields('node' , array('nid' , 'type' , 'title' , 'uid' , 'changed'));    $query->addField('price' , 'field_point_needed_value' , 'price');    $query->condition('node.status' , 1);    $query->condition('node.language' , $language);    $query->condition('node.type' , 'publication');    $query->condition('price.bundle', 'publication');    $query->condition('field_file.entity_type', 'node');    $query->condition('field_file.bundle', 'publication');    $query->groupBy('node.nid');    $query->range($page*10 , 10);    $ebooks = $query->execute()->fetchAll();    /*    $nids = array();    $ebooks_index = array();    foreach ($ebooks as $row){        array_push($nids , $row->nid);        $ebooks_index[$row->nid] = $row;    }    $query = db_select('field_data_field_image' , 'field_image');    $query->join('file_managed' , 'image' , 'field_image.field_image_fid = image.fid');    $query->addField('field_image' , 'entity_id' , 'nid');    $query->addField('image' , 'uri' , 'picture');    $query->condition('field_image.entity_id' , $nids , 'IN');    $query->condition('field_image.bundle', 'publication');    $results = $query->execute()->fetchAll();    foreach ($results as $result){        $ebooks_index[$result->nid]->picture = $result->picture;    }    $query = db_select('field_data_field_publish_file' , 'field_file_published');    $query->join('file_managed' , 'file_published' , 'field_file_published.field_publish_file_fid = file_published.fid');    $query->addField('field_file_published' , 'entity_id' , 'nid');    $query->addField('file_published' , 'uri' , 'sample_file');    $query->condition('field_file_published.entity_id' , $nids , 'IN');    $query->condition('field_file_published.bundle', 'publication');    $results = $query->execute()->fetchAll();    foreach ($results as $result){        $ebooks_index[$result->nid]->sample_file = $result->sample_file;    }    $ebooks = array();    foreach ($ebooks_index as $row){        array_push($ebooks , $row);    }    */    return ["EBooks" => $ebooks];}function retrieve_a_content_version_one($nid , $domain){    $node = db_select('node' , 'node')            ->fields('node' , array('nid' , 'type' , 'title' , 'uid' , 'changed'))            ->condition('node.status' , 1)            ->condition('node.nid' , $nid)            ->execute()->fetch();    if($node->type == "publication" && $domain == "EBook"){        $query = db_select('field_data_field_point_needed' , 'price');        $query->addField('price' , 'field_point_needed_value' , 'price');        $query->condition('price.bundle', 'publication');        $query->condition('price.entity_id' , $nid);        $price = $query->execute()->fetch();        $query = db_select('field_data_body' , 'body');        $query->addField('body' , 'body_value' , 'body');        $query->condition('body.bundle', 'publication');        $query->condition('body.entity_id' , $nid);        $body = $query->execute()->fetch();        $query = db_select('field_data_field_image' , 'field_image');        $query->join('file_managed' , 'image' , 'field_image.field_image_fid = image.fid');        $query->addField('field_image' , 'entity_id' , 'nid');        $query->addField('image' , 'uri' , 'picture');        $query->condition('field_image.entity_id' , $nid);        $query->condition('field_image.bundle', 'publication');        $picture = $query->execute()->fetch();        $query = db_select('field_data_field_publish_file' , 'field_file_published');        $query->join('file_managed' , 'file_published' , 'field_file_published.field_publish_file_fid = file_published.fid');        $query->addField('field_file_published' , 'entity_id' , 'nid');        $query->addField('file_published' , 'uri' , 'sample_file');        $query->condition('field_file_published.entity_id' , $nid);        $query->condition('field_file_published.bundle', 'publication');        $sample_file = $query->execute()->fetchAll();        $query = db_select('field_data_field_about_me' , 'about_me');        $query->join('profile' , 'profile' , 'profile.pid = about_me.entity_id');        $query->addField('about_me' , 'field_about_me_value' , 'about_author');        $query->condition('profile.uid' , $node->uid);        $query->condition('profile.type' , 'main');        $query->condition('about_me.entity_type' , 'profile2');        $query->condition('about_me.bundle' , 'main');        $about_author = $query->execute()->fetch();        $node->price = $price->price;        $node->picture = $picture->picture;        $node->sample_file = $sample_file->sample_file;        $node->body = $body->body;        $node->about_author = $about_author->about_author;        return ["ebook" => $node];    }    return ["node" => array()];}